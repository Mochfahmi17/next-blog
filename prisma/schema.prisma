generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          Role      @default(user)
  Post          Post[]
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  Posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

enum Status {
  Draft
  Publish
}

model Post {
  id              String   @id @default(cuid())
  title           String
  slug            String   @unique
  content         String   @db.Text
  image           String
  image_public_id String
  categoryId      String
  category        Category @relation(fields: [categoryId], references: [id])
  authorId        String
  author          User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  status          Status   @default(Draft)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("posts")
}

model PasswordResetCode {
  id        String   @id @default(cuid())
  email     String   @unique
  code      String
  expires   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("passwordResetCode")
}
